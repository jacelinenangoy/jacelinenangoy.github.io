*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

:root{
  --col-01:#222323;
  --col-02:#f0f6f0;
  --col-03:#5252ff;
  --col-04:#b6e878;
  --col-05:#bcbdbc;
  --col-06:#6f6f6f;
  --border: 1px solid var(--col-02);
}

/*head and body element*/

header{
  background-color: rgb(180, 112, 48);
  padding: 10px;
}

head{
  padding: 10px;
  background-color: #ededed;
}

body{
  padding: 10px;
  background-color: #433939;
}


.audio-player-wrapper{
  display: flex;
  flex-direction: column;
  width: 80%;
  margin: 0 auto;
}

/* because I want to overlay the play icon on the audio they need to be in their own wrapper */
.audio-element-wrapper{
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
}

#audioElement{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

/* the hero image was changed into a bar photo I took*/

#heroImage{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

#audioPlayOverlay{
  width: 8rem;
  height: 8rem;
  grid-column: 1/2;
  grid-row: 1/2;
  justify-self: center;
  align-self: center;
  opacity: 0.6;
  pointer-events: none;
}

.audio-controls-wrapper{
  display: flex;
  justify-content: center;
}
/* this overwrites the above display:flex - something which is then undone when the JS loads */
#controlsWrapper{
  display: none;
}

.audio-control-button{
  width: 2rem;
  height: 2rem;
  padding: .1rem;
  border: none;
  cursor: pointer;
}
.audio-control-button:hover{
  background-color:rgb(116, 71, 35);
}
.audio-control-button:active{
  background-color: var(--col-06);
}
.button-icon{
  pointer-events: none;
}


#playButton{
  background-image: url('./icons/play.svg');
}

#muteButton{
  background-image: url('./icons/mute.svg');
}


.audio-progress-bar{
  /* Reset the default appearance */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 2rem;
  flex-grow: 1;
  cursor: pointer;
  background-color: var(--col-01);
  box-shadow: 0 1px 2px var(--col-02) inset;

}


::-moz-progress-bar {
  background-color: var(--col-02);
}

::-webkit-progress-bar {
  background-color: var(--col-01);
  box-shadow: 0 1px 2px var(--col-02) inset;
}

/* I changed the loading progress colour to make it more cohesive with my website! and also as it looks better */

::-webkit-progress-value {
  background-image: linear-gradient(to bottom right, rgb(92, 26, 26), rgb(136, 97, 14));
}

.timeline-loading{
  background-image: -moz-repeating-linear-gradient(45deg, var(--col-03) 0% 2%, transparent 2% 4%, red 4%);
  background-size: 200% 100%;
  animation: loadingAnimation 4s linear infinite;
}

@keyframes loadingAnimation {
  100%{
    background-position: 50% 0%;
  }
}

/* the text is adjusted into different font sizes for visual hierarchy and clearn ledgibility.
I also left aligned these to make it appear easier to read */

/* the body text is a smaller size than the title */

a{
  font-size: small;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  color: rgb(190, 173, 137);
  text-align: left;
  cursor: pointer;
}

/* the hover version of the hyperlink is shown in a different colour, and the cursor turns into a pointer */
/* this is to indicate that this section of text is clickable, and to encourage users to click*/

a:hover{
  font-size: small;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  color: rgb(255, 166, 0);
  cursor: pointer;
}

h2{
  font-size: medium;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  color: rgb(255, 222, 161);
  text-align: left;
}


h3{
  font-size: small;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  color: rgb(148, 116, 64);
}

h4{
  font-size: x-small;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  color: rgb(255, 255, 255);
  text-align: right;
}

h5{
  font-size: x-small;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  color: rgb(128, 83, 57);
  text-align: right;
}

em{
  color: rgb(190, 173, 137);
}


/* photos size adjustment */

#featuredArtist{
  width: 150px;
}

#artist1,
#artist2,
#artist3,
#artist4{
  width: 50px;
}


/* I decided to add these extra rows and columns to create a structure to the website!
This was inspired by Assignment A2, E1 in which I learnt how to create rows for the comic book inspired layout.*/


.row1{
  width: auto;
}


/* for the layout, I wanted to create three columns that float next to each other */

.column{
  float: left;
  padding: 15px;
  height: 550px;
}

/* The left and right column are only 25% width as they only act as support for the media player*/

.left{
  width: 25%;
  background-image: linear-gradient(to  right, rgb(65, 55, 37),rgb(54, 42, 42));
}

/* I wanted to make the middle column the largest as it contains the media player itself rather than text (visual hierarchy, takes up most of the space)*/
.middle {
  width: 50%;
}

.right {
  width: 25%;
  background-image: linear-gradient(to bottom left, rgb(54, 42, 42), rgb(121, 103, 66));
}


/* this ensures lists are not decorated with bullet points of other unnecessary features */
li {
  color: var(--col-01);
  cursor: default;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* this ensures images are aligned left and text and other elements can go on the right */
img{
  float: left;
  padding-right: 5px;
}